{"ast":null,"code":"import Chart from 'chart.js/auto';\nimport * as i0 from \"@angular/core\";\nexport class ChartsComponent {\n  constructor() {\n    this.dataArray = [];\n  }\n  onstructor() {}\n  ngOnInit() {\n    this.createChart(this.dataArray);\n    console.log(this.dataArray);\n  }\n  createChart(dataArray) {\n    var months = [];\n    console.log(typeof dataArray);\n    dataArray.forEach(item => {\n      console.log('typeof(dataArray');\n    });\n  }\n  static #_ = this.ɵfac = function ChartsComponent_Factory(t) {\n    return new (t || ChartsComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChartsComponent,\n    selectors: [[\"app-charts\"]],\n    inputs: {\n      dataArray: \"dataArray\"\n    },\n    decls: 7,\n    vars: 1,\n    consts: [[1, \"container\"], [\"id\", \"MyChart\"]],\n    template: function ChartsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1, \"Insights\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"p\");\n        i0.ɵɵtext(3, \"Below insights of highest country:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 0)(5, \"canvas\", 1);\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.chart);\n      }\n    },\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nthis.chart = new Chart(\"MyChart\", {\n  type: 'bar',\n  data: {\n    labels: ['2022-05-10', '2022-05-11', '2022-05-12', '2022-05-13', '2022-05-14', '2022-05-15', '2022-05-16', '2022-05-17'],\n    datasets: [{\n      label: \"Sales\",\n      data: ['467', '576', '572', '79', '92', '574', '573', '576'],\n      backgroundColor: 'blue'\n    }, {\n      label: \"Profit\",\n      data: ['542', '542', '536', '327', '17', '0.00', '538', '541'],\n      backgroundColor: 'limegreen'\n    }]\n  },\n  options: {\n    aspectRatio: 2.5\n  }\n});","map":{"version":3,"mappings":"AACA,OAAOA,KAAK,MAAM,eAAe;;AASjC,OAAM,MAAOC,eAAe;EAN5BC;IAQW,cAAS,GAAY,EAAE;;EAEhCC,UAAU,IAAK;EAEfC,QAAQ;IACN,IAAI,CAACC,WAAW,CAAC,IAAI,CAACC,SAAS,CAAC;IAChCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,SAAS,CAAC;EAC7B;EAEAD,WAAW,CAACC,SAAkB;IAC5B,IAAIG,MAAM,GAAG,EAAE;IACfF,OAAO,CAACC,GAAG,CAAC,OAAOF,SAAU,CAAC;IAC9BA,SAAS,CAACI,OAAO,CAACC,IAAI,IAAG;MACvBJ,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAAA,CAAC;EAClC;EAAC;qBAhBQP,eAAe;EAAA;EAAA;UAAfA,eAAe;IAAAW;IAAAC;MAAAP;IAAA;IAAAQ;IAAAC;IAAAC;IAAAC;MAAA;QCV5BC,0BAAI;QAAAA,wBAAQ;QAAAA,iBAAK;QACjBA,yBAAG;QAAAA,kDAAkC;QAAAA,iBAAI;QAEzCA,8BAAuB;QACIA,YAAW;QAAAA,iBAAS;;;QAApBA,eAAW;QAAXA,+BAAW;;;;;;ADwBlC,IAAI,CAACC,KAAK,GAAG,IAAInB,KAAK,CAAC,SAAS,EAAE;EAChCoB,IAAI,EAAE,KAAK;EAEXC,IAAI,EAAE;IACJC,MAAM,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,YAAY,EAAC,YAAY,EAC7D,YAAY,EAAE,YAAY,EAAE,YAAY,EAAC,YAAY,CAAG;IACzDC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,OAAO;MACdH,IAAI,EAAE,CAAC,KAAK,EAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EACxC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;MACjBI,eAAe,EAAE;KAClB,EACD;MACED,KAAK,EAAE,QAAQ;MACfH,IAAI,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EACzC,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC;MACnBI,eAAe,EAAE;KAClB;GAEJ;EACDC,OAAO,EAAE;IACPC,WAAW,EAAC;;CAGf,CAAC","names":["Chart","ChartsComponent","constructor","onstructor","ngOnInit","createChart","dataArray","console","log","months","forEach","item","selectors","inputs","decls","vars","consts","template","i0","chart","type","data","labels","datasets","label","backgroundColor","options","aspectRatio"],"sourceRoot":"","sources":["/Users/answaza/Desktop/scrapingPy/dashboardApp/src/app/charts/charts.component.ts","/Users/answaza/Desktop/scrapingPy/dashboardApp/src/app/charts/charts.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport Chart from 'chart.js/auto';\nimport { CData } from '../Data';\n\n@Component({\n  selector: 'app-charts',\n  templateUrl: './charts.component.html',\n  styleUrls: ['./charts.component.css']\n})\n\nexport class ChartsComponent implements OnInit {\n  public chart: any;\n  @Input() dataArray: CData[] = [];\n\n  onstructor() { }\n\n  ngOnInit(): void {\n    this.createChart(this.dataArray);\n    console.log(this.dataArray)\n  }\n\n  createChart(dataArray: CData[]){\n    var months = [];\n    console.log(typeof(dataArray))\n    dataArray.forEach(item => {\n      console.log('typeof(dataArray'))\n    });\n\n    this.chart = new Chart(\"MyChart\", {\n      type: 'bar', //this denotes tha type of chart\n\n      data: {// values on X-Axis\n        labels: ['2022-05-10', '2022-05-11', '2022-05-12','2022-05-13',\n\t\t\t\t\t\t\t\t '2022-05-14', '2022-05-15', '2022-05-16','2022-05-17', ], \n\t       datasets: [\n          {\n            label: \"Sales\",\n            data: ['467','576', '572', '79', '92',\n\t\t\t\t\t\t\t\t '574', '573', '576'],\n            backgroundColor: 'blue'\n          },\n          {\n            label: \"Profit\",\n            data: ['542', '542', '536', '327', '17',\n\t\t\t\t\t\t\t\t\t '0.00', '538', '541'],\n            backgroundColor: 'limegreen'\n          }  \n        ]\n      },\n      options: {\n        aspectRatio:2.5\n      }\n      \n    });\n  }\n}\n","<h2>Insights</h2>\n<p>Below insights of highest country:</p>\n\n<div class=\"container\">\n    <canvas  id=\"MyChart\" >{{ chart }}</canvas>\n  </div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}