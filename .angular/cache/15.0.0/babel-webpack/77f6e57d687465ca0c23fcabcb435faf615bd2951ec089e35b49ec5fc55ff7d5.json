{"ast":null,"code":"import { CData } from '../Data';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction CountriesComponent_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const data_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r1.country);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r1.month);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r1.value);\n  }\n}\nexport class CountriesComponent {\n  constructor(http) {\n    this.http = http;\n    this.displayedColumns = ['Country', 'Month-Year', 'Value'];\n    this.dataSource = [];\n    this.dataArray = [];\n    this.http.get('formatted_data.csv', {\n      responseType: 'text'\n    }).subscribe(data => {\n      let csvToRowArray = data.split(\"\\n\");\n      for (let index = 1; index < csvToRowArray.length - 1; index++) {\n        let row = csvToRowArray[index].split(\",\");\n        this.dataArray.push(new CData(parseInt(row[0]), row[1], row[2], parseInt(row[3])));\n      }\n      console.log(this.dataArray);\n    }, error => {\n      console.log(error);\n    });\n  }\n  // country: CData = {\n  //   id: 1,\n  //   country: 'KSA',\n  //   month: 'Jul-91',\n  //   value: 10000\n  // }\n  ngOnInit() {}\n  static #_ = this.ɵfac = function CountriesComponent_Factory(t) {\n    return new (t || CountriesComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CountriesComponent,\n    selectors: [[\"app-countries\"]],\n    decls: 13,\n    vars: 1,\n    consts: [[1, \"table\", \"table-responsive\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function CountriesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\")(2, \"tr\")(3, \"th\");\n        i0.ɵɵtext(4, \"ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"th\");\n        i0.ɵɵtext(6, \"Country\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"th\");\n        i0.ɵɵtext(8, \"Month-Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"th\");\n        i0.ɵɵtext(10, \"Value\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(11, \"tbody\");\n        i0.ɵɵtemplate(12, CountriesComponent_tr_12_Template, 9, 4, \"tr\", 1);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngForOf\", ctx.dataArray);\n      }\n    },\n    dependencies: [i2.NgForOf],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,KAAK,QAAQ,SAAS;;;;;;ICYrBC,0BAAmC;IAC7BA,YAAW;IAAAA,iBAAK;IACpBA,0BAAI;IAAAA,YAAgB;IAAAA,iBAAK;IACzBA,0BAAI;IAAAA,YAAc;IAAAA,iBAAK;IACvBA,0BAAI;IAAAA,YAAc;IAAAA,iBAAK;;;;IAHnBA,eAAW;IAAXA,gCAAW;IACXA,eAAgB;IAAhBA,qCAAgB;IAChBA,eAAc;IAAdA,mCAAc;IACdA,eAAc;IAAdA,mCAAc;;;ADR9B,OAAM,MAAOC,kBAAkB;EAK7BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAJxB,qBAAgB,GAAa,CAAC,SAAS,EAAE,YAAY,EAAE,OAAO,CAAC;IAC/D,eAAU,GAAG,EAAE;IACR,cAAS,GAAY,EAAE;IAG5B,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,oBAAoB,EAAE;MAACC,YAAY,EAAE;IAAM,CAAC,CAAC,CAC1DC,SAAS,CACNC,IAAI,IAAG;MACH,IAAIC,aAAa,GAAGD,IAAI,CAACE,KAAK,CAAC,IAAI,CAAC;MACpC,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGF,aAAa,CAACG,MAAM,GAAG,CAAC,EAAED,KAAK,EAAE,EAAE;QAC7D,IAAIE,GAAG,GAAGJ,aAAa,CAACE,KAAK,CAAC,CAACD,KAAK,CAAC,GAAG,CAAC;QACzC,IAAI,CAACI,SAAS,CAACC,IAAI,CAAC,IAAIf,KAAK,CAAEgB,QAAQ,CAAEH,GAAG,CAAC,CAAC,CAAC,CAAC,EAAEA,GAAG,CAAC,CAAC,CAAC,EAAEA,GAAG,CAAC,CAAC,CAAC,EAAEG,QAAQ,CAACH,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;MAEtFI,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,SAAS,CAAC;IAC/B,CAAC,EACDK,KAAK,IAAG;MACJF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IACtB,CAAC,CACJ;EACH;EAEA;EACA;EACA;EACA;EACA;EACA;EAGAC,QAAQ,IAER;EAAC;qBAhCUlB,kBAAkB;EAAA;EAAA;UAAlBA,kBAAkB;IAAAmB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCN3BxB,gCAAsC;QAG1BA,kBAAE;QAAAA,iBAAK;QACXA,0BAAI;QAAAA,uBAAO;QAAAA,iBAAK;QAChBA,0BAAI;QAAAA,0BAAU;QAAAA,iBAAK;QACnBA,0BAAI;QAAAA,sBAAK;QAAAA,iBAAK;QAGlBA,8BAAO;QACLA,mEAKK;QACPA,iBAAQ;;;QANeA,gBAAY;QAAZA,uCAAY","names":["CData","i0","CountriesComponent","constructor","http","get","responseType","subscribe","data","csvToRowArray","split","index","length","row","dataArray","push","parseInt","console","log","error","ngOnInit","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/answaza/Desktop/scrapingPy/dashboardApp/src/app/countries/countries.component.ts","/Users/answaza/Desktop/scrapingPy/dashboardApp/src/app/countries/countries.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CData } from '../Data'\nimport { HttpClient } from \"@angular/common/http\";\n\n@Component({\n  selector: 'app-countries',\n  templateUrl: './countries.component.html',\n  styleUrls: ['./countries.component.css']\n})\nexport class CountriesComponent implements OnInit {\n  displayedColumns: string[] = ['Country', 'Month-Year', 'Value'];\n  dataSource = [];\n  public dataArray: CData[] = [];\n\n  constructor(private http: HttpClient){\n    this.http.get('formatted_data.csv', {responseType: 'text'})\n    .subscribe(\n        data => {\n            let csvToRowArray = data.split(\"\\n\");\n            for (let index = 1; index < csvToRowArray.length - 1; index++) {\n              let row = csvToRowArray[index].split(\",\");\n              this.dataArray.push(new CData( parseInt( row[0]), row[1], row[2], parseInt(row[3])));\n            }\n            console.log(this.dataArray);\n        },\n        error => {\n            console.log(error);\n        }\n    );\n  }\n\n  // country: CData = {\n  //   id: 1,\n  //   country: 'KSA',\n  //   month: 'Jul-91',\n  //   value: 10000\n  // }\n\n  \n  ngOnInit(): void {\n    \n  }\n\n}\n","\n    \n\n    <table class=\"table table-responsive\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Country</th>\n            <th>Month-Year</th>\n            <th>Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let data of dataArray\">\n            <td>{{data.id}}</td>\n            <td>{{data.country}}</td>\n            <td>{{data.month}}</td>\n            <td>{{data.value}}</td>\n          </tr>\n        </tbody>\n      </table>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}