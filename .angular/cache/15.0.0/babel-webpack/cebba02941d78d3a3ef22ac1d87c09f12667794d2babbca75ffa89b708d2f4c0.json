{"ast":null,"code":"import Chart from 'chart.js/auto';\nimport * as i0 from \"@angular/core\";\nexport class ChartsComponent {\n  constructor() {\n    this.dataArray = [];\n    this.monthsJson = \"\";\n  }\n  onstructor() {}\n  ngOnInit() {\n    this.createChart(this.dataArray);\n    console.log(Object.getPrototypeOf(this.monthsArray));\n    for (const item in Object.entries(this.dataArray)) {\n      console.log(item);\n    }\n  }\n  createChart(dataArray) {\n    var months = [];\n    this.chart = new Chart(\"MyChart\", {\n      type: 'bar',\n      data: {\n        labels: Object.entries(this.monthsArray),\n        datasets: [{\n          label: \"Sales\",\n          data: ['467', '576', '572', '79', '92', '574', '573', '576'],\n          backgroundColor: 'blue'\n        }, {\n          label: \"Profit\",\n          data: ['542', '542', '536', '327', '17', '0.00', '538', '541'],\n          backgroundColor: 'limegreen'\n        }]\n      },\n      options: {\n        aspectRatio: 2.5\n      }\n    });\n  }\n  static #_ = this.ɵfac = function ChartsComponent_Factory(t) {\n    return new (t || ChartsComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChartsComponent,\n    selectors: [[\"app-charts\"]],\n    inputs: {\n      dataArray: \"dataArray\",\n      monthsJson: \"monthsJson\"\n    },\n    decls: 7,\n    vars: 1,\n    consts: [[1, \"container\"], [\"id\", \"MyChart\"]],\n    template: function ChartsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1, \"Insights\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"p\");\n        i0.ɵɵtext(3, \"Below insights of highest country:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 0)(5, \"canvas\", 1);\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.chart);\n      }\n    },\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,OAAOA,KAAK,MAAM,eAAe;;AASjC,OAAM,MAAOC,eAAe;EAN5BC;IAQW,cAAS,GAAkB,EAAE;IAC7B,eAAU,GAAY,EAAE;;EAEjCC,UAAU,IAET;EAEDC,QAAQ;IACN,IAAI,CAACC,WAAW,CAAC,IAAI,CAACC,SAAS,CAAC;IAGhCC,OAAO,CAACC,GAAG,CAACC,MAAM,CAACC,cAAc,CAAC,IAAI,CAACC,WAAW,CAAC,CAAC;IACpD,KAAK,MAAMC,IAAI,IAAIH,MAAM,CAACI,OAAO,CAAC,IAAI,CAACP,SAAS,CAAC,EAAE;MACjDC,OAAO,CAACC,GAAG,CAACI,IAAI,CAAC;;EAIrB;EAEAP,WAAW,CAACC,SAAkB;IAC5B,IAAIQ,MAAM,GAAG,EAAE;IAKf,IAAI,CAACC,KAAK,GAAG,IAAIf,KAAK,CAAC,SAAS,EAAE;MAChCgB,IAAI,EAAE,KAAK;MAEXC,IAAI,EAAE;QACJC,MAAM,EAAET,MAAM,CAACI,OAAO,CAAC,IAAI,CAACF,WAAW,CAAC;QACxCQ,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,OAAO;UACdH,IAAI,EAAE,CAAC,KAAK,EAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EACxC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;UACjBI,eAAe,EAAE;SAClB,EACD;UACED,KAAK,EAAE,QAAQ;UACfH,IAAI,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EACzC,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC;UACnBI,eAAe,EAAE;SAClB;OAEJ;MACDC,OAAO,EAAE;QACPC,WAAW,EAAC;;KAGf,CAAC;EACJ;EAAC;qBApDUtB,eAAe;EAAA;EAAA;UAAfA,eAAe;IAAAuB;IAAAC;MAAAnB;MAAAoB;IAAA;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCV5BC,0BAAI;QAAAA,wBAAQ;QAAAA,iBAAK;QACjBA,yBAAG;QAAAA,kDAAkC;QAAAA,iBAAI;QAEzCA,8BAAuB;QACIA,YAAW;QAAAA,iBAAS;;;QAApBA,eAAW;QAAXA,+BAAW","names":["Chart","ChartsComponent","constructor","onstructor","ngOnInit","createChart","dataArray","console","log","Object","getPrototypeOf","monthsArray","item","entries","months","chart","type","data","labels","datasets","label","backgroundColor","options","aspectRatio","selectors","inputs","monthsJson","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["/Users/answaza/Desktop/scrapingPy/dashboardApp/src/app/charts/charts.component.ts","/Users/answaza/Desktop/scrapingPy/dashboardApp/src/app/charts/charts.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport Chart from 'chart.js/auto';\nimport { CData } from '../Data';\n\n@Component({\n  selector: 'app-charts',\n  templateUrl: './charts.component.html',\n  styleUrls: ['./charts.component.css']\n})\n\nexport class ChartsComponent implements OnInit {\n  public chart: any;\n  @Input() dataArray : Array<CData> = [];\n  @Input() monthsJson : String = \"\";\n\n  onstructor() {\n    \n   }\n\n  ngOnInit(): void {\n    this.createChart(this.dataArray);\n\n    \n    console.log(Object.getPrototypeOf(this.monthsArray))\n    for (const item in Object.entries(this.dataArray)) {\n      console.log(item);\n      \n    }\n    \n  }\n\n  createChart(dataArray: CData[]){\n    var months = [];\n    \n    \n\n\n    this.chart = new Chart(\"MyChart\", {\n      type: 'bar', //this denotes tha type of chart\n\n      data: {// values on X-Axis\n        labels: Object.entries(this.monthsArray), \n\t       datasets: [\n          {\n            label: \"Sales\",\n            data: ['467','576', '572', '79', '92',\n\t\t\t\t\t\t\t\t '574', '573', '576'],\n            backgroundColor: 'blue'\n          },\n          {\n            label: \"Profit\",\n            data: ['542', '542', '536', '327', '17',\n\t\t\t\t\t\t\t\t\t '0.00', '538', '541'],\n            backgroundColor: 'limegreen'\n          }  \n        ]\n      },\n      options: {\n        aspectRatio:2.5\n      }\n      \n    });\n  }\n}\n\n","<h2>Insights</h2>\n<p>Below insights of highest country:</p>\n\n<div class=\"container\">\n    <canvas  id=\"MyChart\" >{{ chart }}</canvas>\n  </div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}